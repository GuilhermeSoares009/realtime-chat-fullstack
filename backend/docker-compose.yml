services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    networks:
      - chat_network
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:alpine
    container_name: chat_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - chat_network
    depends_on:
      - app

  postgres:
    image: postgres:16-alpine
    container_name: chat_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-chat_db}
      POSTGRES_USER: ${DB_USERNAME:-chat_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-chat_secret_2024}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat_network

  redis:
    image: redis:7-alpine
    container_name: chat_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_queue
    restart: unless-stopped
    command: php artisan queue:work --tries=3 --timeout=90
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - chat_network
    depends_on:
      - app
      - redis

  reverb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_reverb
    restart: unless-stopped
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    working_dir: /var/www
    ports:
      - "8080:8080"
    volumes:
      - ./:/var/www
    networks:
      - chat_network
    depends_on:
      - app
      - redis

volumes:
  postgres_data:
  redis_data:

networks:
  chat_network:
    driver: bridge